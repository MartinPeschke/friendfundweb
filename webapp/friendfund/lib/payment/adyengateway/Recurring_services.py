################################################## 
# Recurring_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from Recurring_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class RecurringLocator:
    RecurringPortType_address = "https://pal-test.adyen.com/pal/servlet/soap/Recurring"
    def getRecurringPortTypeAddress(self):
        return RecurringLocator.RecurringPortType_address
    def getRecurringPortType(self, url=None, **kw):
        return RecurringHttpBindingSOAP(url or RecurringLocator.RecurringPortType_address, **kw)

# Methods
class RecurringHttpBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: deactivateRecurring
    def deactivateRecurring(self, request):
        if isinstance(request, deactivateRecurringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(deactivateRecurringResponse.typecode)
        return response

    # op: disable
    def disable(self, request):
        if isinstance(request, disableRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(disableResponse.typecode)
        return response

    # op: initialiseRecurring
    def initialiseRecurring(self, request):
        if isinstance(request, initialiseRecurringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(initialiseRecurringResponse.typecode)
        return response

    # op: listRecurringDetails
    def listRecurringDetails(self, request):
        if isinstance(request, listRecurringDetailsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(listRecurringDetailsResponse.typecode)
        return response

    # op: storeToken
    def storeToken(self, request):
        if isinstance(request, storeTokenRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(storeTokenResponse.typecode)
        return response

    # op: submitRecurring
    def submitRecurring(self, request):
        if isinstance(request, submitRecurringRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="", **kw)
        # no output wsaction
        response = self.binding.Receive(submitRecurringResponse.typecode)
        return response

deactivateRecurringRequest = ns0.deactivateRecurring_Dec().pyclass

deactivateRecurringResponse = ns0.deactivateRecurringResponse_Dec().pyclass

disableRequest = ns0.disable_Dec().pyclass

disableResponse = ns0.disableResponse_Dec().pyclass

initialiseRecurringRequest = ns0.initialiseRecurring_Dec().pyclass

initialiseRecurringResponse = ns0.initialiseRecurringResponse_Dec().pyclass

listRecurringDetailsRequest = ns0.listRecurringDetails_Dec().pyclass

listRecurringDetailsResponse = ns0.listRecurringDetailsResponse_Dec().pyclass

storeTokenRequest = ns0.storeToken_Dec().pyclass

storeTokenResponse = ns0.storeTokenResponse_Dec().pyclass

submitRecurringRequest = ns0.submitRecurring_Dec().pyclass

submitRecurringResponse = ns0.submitRecurringResponse_Dec().pyclass
