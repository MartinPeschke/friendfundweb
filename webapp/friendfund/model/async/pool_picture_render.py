from friendfund.lib import helpers as hfrom friendfund.model.mapper import DBMappedObject, GenericAttrib, DBMapper, DBMappingclass PoolPicture(DBMappedObject):	_set_root = _get_root = "USER"	_unique_keys = ['u_id', 'name', 'profile_picture_url']	_cachable = False	_keys = [GenericAttrib(str,'name','name')			,GenericAttrib(int,'u_id','u_id')			,GenericAttrib(unicode,'profile_picture_url','profile_picture_url')			]	def get_profile_pic(self, type="RA"):		return h.get_user_picture(self.profile_picture_url, type)class PoolPictureUsersProc(DBMappedObject):	"""		exec [app].[get_pool_picture_users]'<POOL p_url ="UC0xMDkxMA~~"/>' 		<RESULT status="0" proc_name="get_pool_picture_users"> 		  <POOL_PICTURE> 			<USER u_id="2363" u_name="Martin Peschke" /> 			<USER u_id="2362" u_name="MannometerpeterAlon DearPeterwhydontyoustayandd" /> 			<USER u_id="2361" u_name="Izekhiel Achmad Nadschaffrimabam" /> 			<USER u_id="2358" u_name="???" /> 			<USER u_id="2359" u_name="BERTI VOGTS" /> 			<USER u_id="2360" u_name="Mapa Technorac" /> 		  </POOL_PICTURE> 		</RESULT>	"""	_set_root = "POOL"	_get_root = "POOLPICTURE"	_get_proc = _set_proc = "async.get_pool_picture_users"	_unique_keys = ['p_url']	_cachable = False	_keys = [GenericAttrib(str,'p_url','p_url'), DBMapper(PoolPicture, 'users', 'USER', is_list = True)]class AddRenderedPoolPictureProc(DBMappedObject):	"""		exec [async].[add_rendered_pool_picture] '<POOL_PICTURE p_url ="UC0xMDkyNQ~~" pool_picture_url = "asdfasdf"/>'	"""	_set_root = _get_root = "POOL_PICTURE"	_get_proc = _set_proc = "async.add_rendered_pool_picture"	_unique_keys = ['p_url']	_cachable = False	_keys = [GenericAttrib(str,'p_url','p_url')			,GenericAttrib(str,'pool_picture_url','pool_picture_url')			]