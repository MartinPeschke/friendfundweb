import simplejson, urllib, urllib2, loggingfrom friendfund.lib import oauthfrom friendfund.lib import tw_helper, helpers as hfrom friendfund.tasks.notifiers.common import MissingTemplateException, InvalidAccessTokenExceptionfrom friendfund.tasks.notifiers.twitter_templates import TEMPLATES, STANDARD_PARAMSlog = logging.getLogger(__name__)def url_shorten(login, apikey, url):	query = urllib.quote(url)	query = "https://api-ssl.bit.ly/v3/shorten?domain=j.mp&login=%(login)s&apiKey=%(apikey)s&longUrl=%(query)s"%locals()	try:		res = urllib.urlopen(query)	except urllib.HTTPError, e:		log.error(e.fp().read())		return url	else:		result = simplejson.loads(res.read())		if result['status_code'] == 200:			return result['data']['url']		else:			log.error(result)			return urldef _tweet(template, sndr_data, rcpt_data, template_data, config):	shortened_url = url_shorten(sndr_data['bitlylogin'], sndr_data['bitlyapikey'],\					'http://%s/pool/%s' % (template_data['merchant_domain'], template_data['p_url'] ))	msg = "%s%s" % (template_data['tweet'], shortened_url)	consumer = oauth.Consumer(sndr_data['twitterapikey'], sndr_data['twitterapisecret'])	try:		json_data = tw_helper.fetch_url("https://api.twitter.com/1/statuses/update.json", 										"POST", 										sndr_data['access_token'], 										sndr_data['access_token_secret'], 										consumer,										params = {"status" : msg})	except urllib2.HTTPError, e:		print e.fp.read()		raise InvalidAccessTokenException(e)	else:		json_data = simplejson.loads(json_data)		return str(json_data.get("id"))def send_tweet(template, sndr_data, rcpt_data, template_data, config):	if sndr_data['u_id'] in ['25710','25711','25712','25713','25714','25715','25716','25717','25718','25719','25720']:		sndr_data['twitterapikey'] = config['testtwitterapikey']		sndr_data['twitterapisecret'] = config['testtwitterapisecret']		log.info( "USED_TEST_TWITTER_APP_KEYS" )	else:		sndr_data['twitterapikey'] = config['twitterapikey']		sndr_data['twitterapisecret'] = config['twitterapisecret']	sndr_data['bitlylogin'] = config['bitly.login']	sndr_data['bitlyapikey'] = config['bitly.apikey']	return _tweet(template, sndr_data, rcpt_data, template_data, config)